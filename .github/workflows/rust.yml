name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  debian-build:
    runs-on: ubuntu-latest
    steps:
    - name: install GTK3 dev packages
      run: sudo apt-get update && sudo apt-get install libgtk-3-dev -o Acquire::Retries=3 && cargo install cargo-deb
    - name: checkout git repo
      uses: actions/checkout@v2
    - run: cargo build --release
    - name: packaging .deb archive
      run: cargo deb -p flaunch --no-build
    - name: Archive deb package
      uses: actions/upload-artifact@v2
      with:
        name: flaunch deb package
        path: target/debian/*.deb
  
  windows-build:
    runs-on: ubuntu-latest
    steps:
    - run: sudo apt install mingw-w64 unzip wget -y
    - run: wget https://github.com/qarmin/gtk_library_store/releases/download/3.24.0/mingw64.zip && unzip mingw64.zip -d $RUNNER_TEMP
    - name: update PATH environment
      run: > 
        echo $RUNNER_TEMP/mingw64/lib >> "${GITHUB_PATH}" &&
        echo $RUNNER_TEMP/mingw64/bin >> "${GITHUB_PATH}" &&
        echo $RUNNER_TEMP/mingw64/include >> "${GITHUB_PATH}" &&
        echo $RUNNER_TEMP/mingw64/lib/pkgconfig >> "${GITHUB_PATH}"
    - name: Setup windows-gnu target
      run: rustup target add x86_64-pc-windows-gnu
    - name: checkout git repo
      uses: actions/checkout@v2
    - name: compile x86_64-pc-windows-gnu
      run: >
        PYO3_CROSS_LIB_DIR="$RUNNER_TEMP/mingw64/lib/python3.8"
        PYO3_CROSS_INCLUDE_DIR="$RUNNER_TEMP/mingw64/include/python3.8"
        PKG_CONFIG_PATH="$RUNNER_TEMP/mingw64/lib/pkgconfig"
        PKG_CONFIG_ALLOW_CROSS=1
        RUSTFLAGS="-L $RUNNER_TEMP/mingw64/lib"
        cargo build --release --target x86_64-pc-windows-gnu
    - name: Archive executable
      uses: actions/upload-artifact@v2
      with:
        name: windows_executables
        path: target/x86_64-pc-windows-gnu/release/*
  
  tests:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-Zinstrument-coverage"
      LLVM_PROFILE_FILE: "flaunch-%p-%m.profraw"
      RUSTC_BOOTSTRAP: 1
    steps:
    - name: install GTK3 dev packages
      run: sudo apt-get update && sudo apt-get install libgtk-3-dev -o Acquire::Retries=3 && rustup component add llvm-tools-preview && cargo install grcov
    - name: checkout git repo
      uses: actions/checkout@v2
    - run: cargo test
    - name: generate report
      run: grcov . -s . --binary-path ./target/debug/ -t html --branch --ignore-not-existing -o ./target/debug/coverage/
    - name: Archive deb package
      uses: actions/upload-artifact@v2
      with:
        name: coverage report
        path: ./target/debug/coverage/*
